worker_processes  1;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    client_max_body_size 500m;

    sendfile        on;
    keepalive_timeout  65;
    gzip on;
    gzip_min_length 1k;
    gzip_buffers 4 16k;
    gzip_http_version 1.0;
    gzip_comp_level 2;
    gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php application/vnd.ms-fontobject font/ttf font/opentype font/x-woff image/svg+xml;
    gzip_vary off;
    gzip_disable "MSIE [1-6]\.";

    server {
        listen       80;
        server_name $ENTRANCE_DOMAIN;

        location / {
                        proxy_pass http://frontendnew:3000/;
                #                                       try_files $uri $uri/ /index.html last;
                #                                       root   /build/;
                #                                       index  index.html;
        }
        location /nodered/home/comms {
                proxy_pass http://nodered:1880/comms;

                # Required for WebSocket support
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header X-Forwarded-Host $host;
                proxy_set_header X-Forwarded-Server $host;

                # Enable websocket support
                proxy_pass_request_headers on;

                # Turn off buffering
                proxy_buffering off;
                proxy_read_timeout 86400;
        }
        location /nodered/home/ {
                proxy_pass http://nodered:1880/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-Ip $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;

                # 如果后端支持websocket
                proxy_set_header Sec-WebSocket-Extensions $http_sec_web_socket_extensions;
                proxy_set_header Sec-WebSocket-Version $http_sec_web_socket_version;
                proxy_set_header Sec-WebSocket-Key $http_sec_web_socket_key;
        }
        location ~^/inter-api/supos/ {
                proxy_pass http://backend:8080;
                proxy_set_header Host $host;
                proxy_set_header X-Real-Ip $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;

        }
        location /grafana/home/ {
                proxy_pass http://grafana:3000/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
        }
        location /hasura/home/ {
                proxy_pass http://hasura:8080/;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
        }
        location /keycloak/home/auth/ {
                rewrite ^/keycloak/home/auth/(.*)$ /$1 break;
                proxy_pass http://keycloak:8080;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                add_header 'Access-Control-Allow-Origin' '*';  # 允许所有域名
                add_header 'Access-Control-Allow-Credentials' 'true';  # 允许发送 cookie
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';  # 允许的方法
                add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept';  # 允许的请求头
        }
        location /keycloak/home/ {
                proxy_pass http://keycloak:8080/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                add_header 'Access-Control-Allow-Origin' '*';  # 允许所有域名
                add_header 'Access-Control-Allow-Credentials' 'true';  # 允许发送 cookie
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';  # 允许的方法
                add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept';  # 允许的请求头
        }
         location /emq/home/ {
    #                           include /etc/nginx/conf.d/auth_token.conf;
                proxy_pass http://emqx:18083/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
        }
        location /elastic/home/ {
            proxy_pass http://kibana:5601/elastic/home/;  # 将请求代理到 Kibana
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # 防止 WebSocket 断开连接
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_cache_bypass $http_upgrade;
            #        add_header Cross-Origin-Opener-Policy unsafe-none always;
            add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline';";
            add_header X-Frame-Options "ALLOWALL";  # 允许页面在所有frame中嵌入
            add_header X-XSS-Protection "0";  # 禁用 XSS 保护
            add_header X-Content-Type-Options "nosniff";  # 允许浏览器嗅探内容类型
            add_header Referrer-Policy "no-referrer";  # 允许跨域资源引用
            add_header Cross-Origin-Opener-Policy "unsafe-none";  # 放宽跨域打开策略
            add_header Cross-Origin-Embedder-Policy "unsafe-none";  # 放宽跨域嵌入策略
            add_header Cross-Origin-Resource-Policy "cross-origin";  # 允许所有跨域资源加载
        }
        location /portainer/home/ {
            proxy_pass https://portainer:9443/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # 处理 SSL 证书验证（可选）
            proxy_ssl_verify off;
        }
    }
}